<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ludwig on </title>
    <link>https://fuzzypixelz.github.io/jam0004-docs/docs/prologue/</link>
    <description>Recent content in Ludwig on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 06 Oct 2020 08:48:45 +0000</lastBuildDate><atom:link href="https://fuzzypixelz.github.io/jam0004-docs/docs/prologue/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction</title>
      <link>https://fuzzypixelz.github.io/jam0004-docs/docs/prologue/introduction/</link>
      <pubDate>Tue, 06 Oct 2020 08:48:57 +0000</pubDate>
      
      <guid>https://fuzzypixelz.github.io/jam0004-docs/docs/prologue/introduction/</guid>
      <description>Getting started # The easiest way to play with Ludwig is through the playground.
If you&amp;rsquo;d like to build Ludwig from source, clone the source and build the project using the luwig npm script, my tests in particular were done on macOS using npm v9.4.0 and node v19.6.1.
git clone git@github.com:fuzzypixelz/jam0004.git cd ludwig npm run ludwig open dest/index.html Next, webpack should generate the build files under dest/. Simply open the index.</description>
    </item>
    
    <item>
      <title>Syntax</title>
      <link>https://fuzzypixelz.github.io/jam0004-docs/docs/prologue/syntax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fuzzypixelz.github.io/jam0004-docs/docs/prologue/syntax/</guid>
      <description>In the following expr* means zero or more repetitions of the syntax form expr, while expr+ means one or more repetitions or expr and expr? means zero or one occurrences of expr and finally expr || expr&#39; means either the form expr or expr&#39;. For example an non-negative integer literal can be written as:
number = (0 || 1 || ...)+ Musical notes # Ludwig has special syntax for expressing the value, pitch and octave of a musical note using the following syntax:</description>
    </item>
    
    <item>
      <title>Language Constructs</title>
      <link>https://fuzzypixelz.github.io/jam0004-docs/docs/prologue/languageconstructs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fuzzypixelz.github.io/jam0004-docs/docs/prologue/languageconstructs/</guid>
      <description>As a functional logic language, Ludwig does not need many language constructs to be expressive. For the precise syntax, refer to Syntax.
Notes # Of course, no language for creating music would be complete without a way to express the notes that should be played. In fact, these are one of the only kinds of literals that Ludwig has dedicated syntax for.
Because every Ludwig program is just one large expression that is lazily evaluated and played, individual notes are already valid songs.</description>
    </item>
    
  </channel>
</rss>
